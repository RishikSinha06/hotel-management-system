# Generated by Django 5.2.7 on 2025-10-23 19:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Hotel",
            fields=[
                ("Hotel_ID", models.AutoField(primary_key=True, serialize=False)),
                ("Name", models.CharField(max_length=100)),
                ("City", models.CharField(max_length=255)),
                ("State", models.CharField(max_length=255)),
                ("Rating", models.DecimalField(decimal_places=1, max_digits=2)),
                ("Contact", models.CharField(max_length=20)),
                ("Description", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("DateOfBirth", models.DateField(blank=True, null=True)),
                ("City", models.CharField(blank=True, max_length=255)),
                ("State", models.CharField(blank=True, max_length=255)),
                ("Country", models.CharField(blank=True, max_length=255)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                ("Booking_ID", models.AutoField(primary_key=True, serialize=False)),
                ("BookingDate", models.DateField()),
                ("CheckIn", models.DateField()),
                ("CheckOut", models.DateField()),
                ("Status", models.CharField(max_length=20)),
                (
                    "Cust_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Cancellation",
            fields=[
                (
                    "Cancellation_ID",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("Cancel_Date", models.DateField()),
                ("Reason", models.CharField(max_length=255)),
                (
                    "Booking_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booking.booking",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Facility",
            fields=[
                ("Facility_ID", models.AutoField(primary_key=True, serialize=False)),
                ("Facility_Name", models.CharField(max_length=100)),
                (
                    "Hotel_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booking.hotel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Offer",
            fields=[
                ("Offer_ID", models.AutoField(primary_key=True, serialize=False)),
                ("Description", models.CharField(max_length=100)),
                ("Start_Date", models.DateField()),
                ("End_Date", models.DateField()),
                ("Discount", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "Hotel_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booking.hotel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("Payment_ID", models.AutoField(primary_key=True, serialize=False)),
                ("Amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("Mode", models.CharField(max_length=20)),
                ("Date", models.DateField()),
                ("Status", models.CharField(max_length=20)),
                (
                    "Booking_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booking.booking",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("Review_ID", models.AutoField(primary_key=True, serialize=False)),
                ("Rating", models.DecimalField(decimal_places=1, max_digits=2)),
                ("Comment", models.CharField(max_length=255)),
                ("Date", models.DateField()),
                (
                    "Cust_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "Hotel_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booking.hotel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Room_Number", models.CharField(max_length=10)),
                ("RoomType", models.CharField(max_length=50)),
                ("Capacity", models.IntegerField()),
                ("Price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("Availability", models.BooleanField(default=True)),
                (
                    "Hotel_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booking.hotel"
                    ),
                ),
            ],
            options={
                "unique_together": {("Hotel_ID", "Room_Number")},
            },
        ),
        migrations.AddField(
            model_name="booking",
            name="Room",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="booking.room"
            ),
        ),
        migrations.CreateModel(
            name="Customer_Phone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Phone_Number", models.CharField(max_length=20)),
                ("Is_Primary", models.BooleanField(default=False)),
                (
                    "Cust_ID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("Cust_ID", "Phone_Number")},
            },
        ),
        migrations.CreateModel(
            name="Room_Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Image_URL", models.CharField(max_length=255)),
                ("Reference_Name", models.CharField(max_length=255)),
                ("Description", models.CharField(max_length=255)),
                (
                    "Room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="booking.room"
                    ),
                ),
            ],
            options={
                "unique_together": {("Room", "Image_URL")},
            },
        ),
    ]
